#!/bin/sh

# AUTHOR: koalagang (https://github.com/koalagang)
# Dependencies: dmenu, mpv, mpv-mpris, playerctl
# (these latter two are for checking what song is currently playing; as a bonus, they also allow you to use the media keys to pause and unpause mpv)
# Listen to the radio using dmenu and mpv. No need for an API or some bloated application like a browser ;)
# To find the URL you need for your chosen radio, inspect element on the play button on the website and then press it.
# This should point you to the URL (at least that's how it works for Chromium-based browsers). Easy as pie.
# Some websites force you into creating an account to listen but if you can get the URL another way then you can listen without an account.
# If, for example, you wanted to listen to BBC radio without creating an account, you could use URLs shown on this page:
# https://gist.githubusercontent.com/bpsib/67089b959e4fa898af69fea59ad74bc3/raw/66afe675421d912a4461d3d86abe1b30b1d041fa/BBC-Radio.m3u
# You can also play music from Soundcloud by using the 'share' URL; this can actually also be used to bypass premium songs.

# URLs
kpop_url='https://listen.moe/kpop/stream'
jpop_url='https://listen.moe/stream'
classical_url='https://live.musopen.org:8085/streamvbr0?'


change_radio (){
    pkill --full "$kpop_url"
    pkill --full "$jpop_url"
    pkill --full "$classical_url"
    [ -n "$1" ] && mpv --volume=45 "$1" &
}

case "$(printf 'K-pop\nJ-pop\nClassical\nCurrently playing song\nStop radio' | dmenu -i)" in
    'K-pop') change_radio "$kpop_url" ;;
    'J-pop') change_radio "$jpop_url" ;;
    'Classical') change_radio "$classical_url" ;;
    'Currently playing song')
        # I couldn't figure out how to properly use these awk commands all in one command
        # I tried `awk '$1=$1; {FS="artist "; print $2}; "[[:blank:]]*$"'`
        # but it didn't work out
        notify-send -t 5000 'Artist' "$(playerctl metadata | awk '$1=$1' | awk -F'artist ' '{print $2}'| awk '!/^[[:blank:]]*$/')"
        notify-send -t 5000 'Song' "$(playerctl metadata | awk '$1=$1' | awk -F'title ' '{print $2}' | awk '!/^[[:blank:]]*$/')"
        notify-send -t 5000 'Album' "$(playerctl metadata | awk '$1=$1' | awk -F'album ' '{print $2}' | awk '!/^[[:blank:]]*$/')" ;;
    'Stop radio') change_radio
esac
